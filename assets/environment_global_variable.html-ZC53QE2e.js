import{_ as s,c as a,d as e,o as t}from"./app--KzHPAzK.js";const p={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><p>多种环境：开发环境、测试环境、生产环境 <br> 接口关联：需要手动关联 <br> 随机参数：参数需要手动修改</p><h2 id="多种环境" tabindex="-1"><a class="header-anchor" href="#多种环境"><span>多种环境</span></a></h2><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><ol><li>在 <code>Environments</code> 创建环境并设置参数</li><li>在请求中右上角选择环境</li><li>在请求中以 <code>{{ variable }}</code> 包裹变量名称取得变量</li></ol><h3 id="全局变量" tabindex="-1"><a class="header-anchor" href="#全局变量"><span>全局变量</span></a></h3><p>全局变量应用于任何接口，环境变量优先于全局变量，获取方式与<a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a>相同</p><h2 id="接口关联" tabindex="-1"><a class="header-anchor" href="#接口关联"><span>接口关联</span></a></h2><h3 id="json-提取器" tabindex="-1"><a class="header-anchor" href="#json-提取器"><span>Json 提取器</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 获取响应体</span></span>
<span class="line"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>pm<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置全局变量</span></span>
<span class="line">pm<span class="token punctuation">.</span>globals<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>access_token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 正则表达式匹配token</span></span>
<span class="line"><span class="token keyword">const</span> access_token <span class="token operator">=</span> pm<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;access_token&quot;:&quot;(.*?)&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置全局变量</span></span>
<span class="line">pm<span class="token punctuation">.</span>globals<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">,</span> access_token<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="随机参数" tabindex="-1"><a class="header-anchor" href="#随机参数"><span>随机参数</span></a></h2><h3 id="postman-内置动态参数" tabindex="-1"><a class="header-anchor" href="#postman-内置动态参数"><span>Postman 内置动态参数</span></a></h3><p><a href="https://learning.postman.com/docs/tests-and-scripts/write-scripts/variables-list/" target="_blank" rel="noopener noreferrer">Postman 内置动态参数</a></p><p>格式：<code>{{$}}</code></p><ul><li><code>{{$timestamp}}</code> 当前时间戳</li><li><code>{{$randomInt}}</code> 0-1000随机数</li><li><code>{{$guid}}</code> 随机guid字符串</li></ul><h3 id="自定义动态函数" tabindex="-1"><a class="header-anchor" href="#自定义动态函数"><span>自定义动态函数</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> times <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">pm<span class="token punctuation">.</span>globals<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;times&#39;</span><span class="token punctuation">,</span> times<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Date.now()</code> 当前时间戳</li></ul>`,20)]))}const i=s(p,[["render",l],["__file","environment_global_variable.html.vue"]]),r=JSON.parse('{"path":"/docs/postman/environment_global_variable.html","title":"全局变量和环境变量","lang":"zh-CN","frontmatter":{"title":"全局变量和环境变量"},"headers":[{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"多种环境","slug":"多种环境","link":"#多种环境","children":[{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":3,"title":"全局变量","slug":"全局变量","link":"#全局变量","children":[]}]},{"level":2,"title":"接口关联","slug":"接口关联","link":"#接口关联","children":[{"level":3,"title":"Json 提取器","slug":"json-提取器","link":"#json-提取器","children":[]},{"level":3,"title":"正则表达式","slug":"正则表达式","link":"#正则表达式","children":[]}]},{"level":2,"title":"随机参数","slug":"随机参数","link":"#随机参数","children":[{"level":3,"title":"Postman 内置动态参数","slug":"postman-内置动态参数","link":"#postman-内置动态参数","children":[]},{"level":3,"title":"自定义动态函数","slug":"自定义动态函数","link":"#自定义动态函数","children":[]}]}],"git":{"updatedTime":1737731455000,"contributors":[{"name":"dbthree","username":"dbthree","email":"linshengxuan00@163.com","commits":1,"url":"https://github.com/dbthree"}]},"filePathRelative":"docs/postman/environment_global_variable.md"}');export{i as comp,r as data};
